// this bit is just plain Jenkins Groovy
def secretsDirectory = new File("/secret/jenkins-secrets").exists() ? new File("/secret/jenkins-secrets") : new File("/var/jenkins_secrets");
def dockerRegistryAddress = new File(secretsDirectory, "dockerRegistryAddress").text.trim()
def jenkinsAgentImageTag = new File(secretsDirectory, "cloudOpsForKubernetesDefaultBranch").text.trim().replace('/','-')
def randomUUID = "${UUID.randomUUID().toString()}"
def randomLabel = "jenkins-worker-${randomUUID}"

// this is a workaround until this bug is fixed: https://issues.jenkins-ci.org/browse/JENKINS-56943
def podYamlFromFile = new File("${env.JENKINS_HOME}/workspace/build-core-images@script/cloudops-for-kubernetes/jenkins/agents/kubernetes/docker-0.5gb-0.25core-1container.yaml").text.trim()
String podYaml = podYamlFromFile.replace('${dockerRegistryAddress}', "${dockerRegistryAddress}").replace('${jenkinsAgentImageTag}', "${jenkinsAgentImageTag}")

// this is the Pipeline DSL.
// Syntax here: https://jenkins.io/doc/book/pipeline/syntax/
// More useful docs: https://jenkins.io/doc/pipeline/steps/
pipeline {
  agent { kubernetes { label "${randomLabel}" defaultContainer "jnlp" yaml "${podYaml}" }}
  options {
    buildDiscarder(logRotator(numToKeepStr: '30', artifactNumToKeepStr: '10000'))
    timeout(time: 180, unit: 'MINUTES')
  }
  stages {
    stage('Build the base, info page, ActiveMQ and MySQL images in parallel') {
      steps {
        script {
          buildlib = load 'cloudops-for-kubernetes/lib/buildlib.groovy'

          parameters = [
            booleanParam(name: 'buildBase', value: true),
            booleanParam(name: 'buildDatapop', value: false),
            booleanParam(name: 'buildMysql', value: true),
            booleanParam(name: 'buildCortex', value: false),
            booleanParam(name: 'buildSearch', value: false),
            booleanParam(name: 'buildBatch', value: false),
            booleanParam(name: 'buildIntegration', value: false),
            booleanParam(name: 'buildCm', value: false),
            booleanParam(name: 'buildDatasync', value: false),
            booleanParam(name: 'buildActivemq', value: true),
            booleanParam(name: 'infoPage', value: true),
            string(name: 'imageTag', value: params.imageTag),
            string(name: 'cloudOpsForKubernetesBranch', value: params.cloudOpsForKubernetesBranch),
            string(name: 'dockerBranch', value: params.dockerBranch),
            string(name: 'epCommerceBranch', value: '')
          ]

          buildlib.buildLocalJob('build-selected-docker-images', parameters)
        }
      }
    }
  }
}
