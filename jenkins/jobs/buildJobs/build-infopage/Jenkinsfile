// this bit is just plain Jenkins Groovy
def secretsDirectory = new File("/secret/jenkins-secrets").exists() ? new File("/secret/jenkins-secrets") : new File("/var/jenkins_secrets");
def randomUUID = "${UUID.randomUUID().toString()}"
def randomLabel = "jenkins-worker-${randomUUID}"
def dockerRegistryAddress = new File(secretsDirectory, "dockerRegistryAddress").text.trim();
def jenkinsAgentImageTag = new File(secretsDirectory, "cloudOpsForKubernetesDefaultBranch").text.trim().replace('/','-');

def sharedSteps() {
  // load EP Groovy Library
  eplib = load "cloudops-for-kubernetes/lib/eplib.groovy"
  buildlib = load "cloudops-for-kubernetes/lib/buildlib.groovy"

  eplib.loginToCloud()
  eplib.loginToDockerRegistry()
}


// this is a workaround until this bug is fixed: https://issues.jenkins-ci.org/browse/JENKINS-56943
def podYamlFromFile = new File("${env.JENKINS_HOME}/workspace/build-docker-images@script/cloudops-for-kubernetes/jenkins/agents/kubernetes/docker-4gb-2core-1container.yaml").text.trim();
String podYaml = podYamlFromFile.replace('${dockerRegistryAddress}', "${dockerRegistryAddress}").replace('${jenkinsAgentImageTag}', "${jenkinsAgentImageTag}")

// this is the Pipeline DSL.
// Syntax here: https://jenkins.io/doc/book/pipeline/syntax/
// More useful docs: https://jenkins.io/doc/pipeline/steps/
pipeline {
  agent {
    kubernetes {
      label "${randomLabel}-1"
      defaultContainer "jnlp"
      yaml "${podYaml}"
    }
  }
  options {
    buildDiscarder(logRotator(numToKeepStr: '30', artifactNumToKeepStr: '10000'))
    timeout(time: 90, unit: 'MINUTES')
      }
  environment {
    dockerImageTag = "${params.dockerBranch}".replace('/','-');
  }
  stages {
    stage('Load EP Groovy Library') {
      steps {
        container('docker') {
          script {
            sharedSteps()
          }
        }
      }
    }
    stage('Build and push the info-page image') {
      steps {
        container('docker') {
          script {
            dockerImageTag = "${params.dockerBranch}".replace('/','-');
            sh """
            cd cloudops-for-kubernetes/info-page
            img build -t "${dockerRegistryAddress}"/ep/info-page:"${dockerImageTag}" .
            img push "${dockerRegistryAddress}"/ep/info-page:"${dockerImageTag}"
            """
          }
        }
      }
    }
  }
}
